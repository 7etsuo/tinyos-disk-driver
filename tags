!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Asm	properties	/properties (req, vararg for parameters)/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Asm	d,define	/defines/
!_TAG_KIND_DESCRIPTION!Asm	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Asm	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Asm	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Asm	t,type	/types (structs and records)/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Asm	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/storm/OS/CODE/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!Asm!section	placement	/placement where the assembled code goes/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
*.tcc	.vscode/settings.json	/^        "*.tcc": "cpp",$/;"	s	object:files.associations
0	.vscode/tasks.json	/^                "$gcc"$/;"	s	array:tasks.0.problemMatcher
0	.vscode/tasks.json	/^                "-fdiagnostics-color=always",$/;"	s	array:tasks.0.args
0	.vscode/tasks.json	/^        {$/;"	o	array:tasks
1	.vscode/tasks.json	/^                "-g",$/;"	s	array:tasks.0.args
2	.vscode/tasks.json	/^                "${file}",$/;"	s	array:tasks.0.args
3	.vscode/tasks.json	/^                "-o",$/;"	s	array:tasks.0.args
4	.vscode/tasks.json	/^                "${fileDirname}\/${fileBasenameNoExtension}"$/;"	s	array:tasks.0.args
ACIA_IRQ	KERNEL.C	/^#define ACIA_IRQ /;"	d	file:
ACIA_OVRN	KERNEL.C	/^#define ACIA_OVRN /;"	d	file:
CA1_CONTROL	DISK.C	/^        UINT16 CA1_CONTROL : 1;             \/* Bit 1 - Controls CA1 output (FDC A0 line and HDC/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
CA1_CONTROL	RW.C	/^    UINT16 CA1_CONTROL : 1;             \/* Bit 1 - Controls CA1 output (FDC A0 line and HDC com/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
CA2_CONTROL	DISK.C	/^        UINT16 CA2_CONTROL : 1;             \/* Bit 2 - Controls CA2 output (FDC A1 line) *\/$/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
CA2_CONTROL	RW.C	/^    UINT16 CA2_CONTROL : 1;             \/* Bit 2 - Controls CA2 output (FDC A1 line) *\/$/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
CHAR_BEL	FONT.H	/^#define CHAR_BEL /;"	d
CHAR_CR	FONT.H	/^#define CHAR_CR /;"	d
CHAR_DEL	FONT.H	/^#define CHAR_DEL /;"	d
CHAR_FF	FONT.H	/^#define CHAR_FF /;"	d
CHAR_LF	FONT.H	/^#define CHAR_LF /;"	d
CHAR_TAB	FONT.H	/^#define CHAR_TAB /;"	d
CHAR_VT	FONT.H	/^#define CHAR_VT /;"	d
CPU_CONTEXT_SIZE	KERN_ASM.S	/^CPU_CONTEXT_SIZE	equ		70$/;"	d
CPU_context	KERNEL.C	/^struct CPU_context \/* 70 bytes *\/$/;"	s	file:
CURR_PROC	KERNEL.C	/^#define CURR_PROC /;"	d	file:
DATA_REQUEST_CONDITION	DISK.C	/^        UINT16 DATA_REQUEST_CONDITION : 1; \/* Bit 2 - Data request condition (1: data request, /;"	m	struct:__anonabd59501010a::__anonabd595010208	typeref:typename:UINT16:1	file:
DATA_REQUEST_CONDITION	RW.C	/^    UINT16 DATA_REQUEST_CONDITION : 1; \/* Bit 2 - Data request condition (1: data request, 0: n/;"	m	struct:__anon7c8b7edf0108	typeref:typename:UINT16:1	file:
DISABLE_DMA_SC_REG	DISK.C	/^#define DISABLE_DMA_SC_REG(/;"	d	file:
DISK.C	.vscode/settings.json	/^        "DISK.C": "cpp",$/;"	s	object:files.associations
DISK_A	RW.C	/^#define DISK_A /;"	d	file:
DISK_B	RW.C	/^#define DISK_B /;"	d	file:
DMA_CONTROL_REGISTER	DISK.C	/^IO_PORT16 DMA_CONTROL_REGISTER = (IO_PORT16)0xFFFF8606;$/;"	v	typeref:typename:IO_PORT16
DMA_COUNT_REG_READ	DISK.C	/^#define DMA_COUNT_REG_READ /;"	d	file:
DMA_COUNT_REG_READ	RW.C	/^#define DMA_COUNT_REG_READ /;"	d	file:
DMA_COUNT_REG_WRITE	DISK.C	/^#define DMA_COUNT_REG_WRITE /;"	d	file:
DMA_COUNT_REG_WRITE	RW.C	/^#define DMA_COUNT_REG_WRITE /;"	d	file:
DMA_DIRECTION_READ	DISK.C	/^#define DMA_DIRECTION_READ /;"	d	file:
DMA_DIRECTION_WRITE	DISK.C	/^#define DMA_DIRECTION_WRITE /;"	d	file:
DMA_DRQ_BIT	DISK.C	/^#define DMA_DRQ_BIT /;"	d	file:
DMA_ERROR_BIT	DISK.C	/^#define DMA_ERROR_BIT /;"	d	file:
DMA_ERROR_STATUS	DISK.C	/^        UINT16 DMA_ERROR_STATUS : 1;       \/* Bit 0 - Indicates DMA error (1: error, 0: no erro/;"	m	struct:__anonabd59501010a::__anonabd595010208	typeref:typename:UINT16:1	file:
DMA_ERROR_STATUS	RW.C	/^    UINT16 DMA_ERROR_STATUS : 1;       \/* Bit 0 - Indicates DMA error (1: error, 0: no error) */;"	m	struct:__anon7c8b7edf0108	typeref:typename:UINT16:1	file:
DMA_FDC_DATA_REG_READ	DISK.C	/^#define DMA_FDC_DATA_REG_READ /;"	d	file:
DMA_FDC_DATA_REG_READ	RW.C	/^#define DMA_FDC_DATA_REG_READ /;"	d	file:
DMA_FDC_DATA_REG_WRITE	DISK.C	/^#define DMA_FDC_DATA_REG_WRITE /;"	d	file:
DMA_FDC_DATA_REG_WRITE	RW.C	/^#define DMA_FDC_DATA_REG_WRITE /;"	d	file:
DMA_FDC_REG_CONTROL_STATUS_READ	DISK.C	/^#define DMA_FDC_REG_CONTROL_STATUS_READ /;"	d	file:
DMA_FDC_REG_CONTROL_STATUS_READ	RW.C	/^#define DMA_FDC_REG_CONTROL_STATUS_READ /;"	d	file:
DMA_FDC_REG_CONTROL_STATUS_WRITE	DISK.C	/^#define DMA_FDC_REG_CONTROL_STATUS_WRITE /;"	d	file:
DMA_FDC_REG_CONTROL_STATUS_WRITE	RW.C	/^#define DMA_FDC_REG_CONTROL_STATUS_WRITE /;"	d	file:
DMA_FDC_SECTOR_REG_READ	DISK.C	/^#define DMA_FDC_SECTOR_REG_READ /;"	d	file:
DMA_FDC_SECTOR_REG_READ	RW.C	/^#define DMA_FDC_SECTOR_REG_READ /;"	d	file:
DMA_FDC_SECTOR_REG_WRITE	DISK.C	/^#define DMA_FDC_SECTOR_REG_WRITE /;"	d	file:
DMA_FDC_SECTOR_REG_WRITE	RW.C	/^#define DMA_FDC_SECTOR_REG_WRITE /;"	d	file:
DMA_FDC_TRACK_REG_READ	DISK.C	/^#define DMA_FDC_TRACK_REG_READ /;"	d	file:
DMA_FDC_TRACK_REG_READ	RW.C	/^#define DMA_FDC_TRACK_REG_READ /;"	d	file:
DMA_FDC_TRACK_REG_WRITE	DISK.C	/^#define DMA_FDC_TRACK_REG_WRITE /;"	d	file:
DMA_FDC_TRACK_REG_WRITE	RW.C	/^#define DMA_FDC_TRACK_REG_WRITE /;"	d	file:
DMA_FDC_TRANSFER_READ	DISK.C	/^#define DMA_FDC_TRANSFER_READ /;"	d	file:
DMA_FDC_TRANSFER_WRITE	DISK.C	/^#define DMA_FDC_TRANSFER_WRITE /;"	d	file:
DMA_HDCS_SELECT_BIT	DISK.C	/^#define DMA_HDCS_SELECT_BIT /;"	d	file:
DMA_MODE	DISK.C	/^#define DMA_MODE /;"	d	file:
DMA_MODE_READ	DISK.C	/^#define DMA_MODE_READ /;"	d	file:
DMA_MODE_READ	RW.C	/^#define DMA_MODE_READ /;"	d	file:
DMA_MODE_READ_BIT	DISK.C	/^#define DMA_MODE_READ_BIT /;"	d	file:
DMA_MODE_SECTOR_COUNT	DISK.C	/^#define DMA_MODE_SECTOR_COUNT /;"	d	file:
DMA_MODE_WRITE	DISK.C	/^#define DMA_MODE_WRITE /;"	d	file:
DMA_MODE_WRITE	RW.C	/^#define DMA_MODE_WRITE /;"	d	file:
DMA_MODE_WRITE_BIT	DISK.C	/^#define DMA_MODE_WRITE_BIT /;"	d	file:
DMA_READ_WRITE_BITS	DISK.C	/^#define DMA_READ_WRITE_BITS /;"	d	file:
DMA_SC_NONZERO_BIT	DISK.C	/^#define DMA_SC_NONZERO_BIT /;"	d	file:
DMA_SC_REG_ACCESS_BIT	DISK.C	/^#define DMA_SC_REG_ACCESS_BIT /;"	d	file:
DMA_STATUS	DISK.C	/^#define DMA_STATUS /;"	d	file:
DMA_STATUS_REGISTER	DISK.C	/^IO_PORT16_RO DMA_STATUS_REGISTER = (IO_PORT16_RO)0xFFFF8606;$/;"	v	typeref:typename:IO_PORT16_RO
DMA_UNUSED	DISK.C	/^        UINT16 DMA_UNUSED : 1;              \/* Bit 6 - Unused, set to 0 (historically for DMA e/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
DMA_UNUSED	RW.C	/^    UINT16 DMA_UNUSED : 1;              \/* Bit 6 - Unused, set to 0 (historically for DMA enabl/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
DMA_VECTOR	RW.C	/^} DMA_VECTOR = { $/;"	t	typeref:struct:__anon7c8b7edf0408={ (volatile char *const) 0xFF860D, (volatile char *const) 0xFF860B, (volatile char *const) 0xFF8609 }	file:
ENABLE_DMA_SC_REG	DISK.C	/^#define ENABLE_DMA_SC_REG(/;"	d	file:
FAILURE	RW.C	/^#define FAILURE /;"	d	file:
FDC_BUSY	RW.C	/^#define FDC_BUSY /;"	d	file:
FDC_CMD_FORCE_INT	DISK.C	/^#define FDC_CMD_FORCE_INT /;"	d	file:
FDC_CMD_FORCE_INTERRUPT_WITH_ALL_CONDITIONS	DISK.C	/^#define FDC_CMD_FORCE_INTERRUPT_WITH_ALL_CONDITIONS /;"	d	file:
FDC_CMD_READ	DISK.C	/^#define FDC_CMD_READ /;"	d	file:
FDC_CMD_READ	RW.C	/^#define FDC_CMD_READ /;"	d	file:
FDC_CMD_READ_ADDR	DISK.C	/^#define FDC_CMD_READ_ADDR /;"	d	file:
FDC_CMD_READ_TRACK	DISK.C	/^#define FDC_CMD_READ_TRACK /;"	d	file:
FDC_CMD_RESTORE	DISK.C	/^#define FDC_CMD_RESTORE /;"	d	file:
FDC_CMD_RESTORE	RW.C	/^#define FDC_CMD_RESTORE /;"	d	file:
FDC_CMD_SEEK	DISK.C	/^#define FDC_CMD_SEEK /;"	d	file:
FDC_CMD_SEEK	RW.C	/^#define FDC_CMD_SEEK /;"	d	file:
FDC_CMD_WRITE	DISK.C	/^#define FDC_CMD_WRITE /;"	d	file:
FDC_CMD_WRITE	RW.C	/^#define FDC_CMD_WRITE /;"	d	file:
FDC_CMD_WRITE_TRACK	DISK.C	/^#define FDC_CMD_WRITE_TRACK /;"	d	file:
FDC_CRC_ERROR	RW.C	/^#define FDC_CRC_ERROR /;"	d	file:
FDC_FLAG_DATA_ADDR_MARK	DISK.C	/^#define FDC_FLAG_DATA_ADDR_MARK /;"	d	file:
FDC_FLAG_DATA_ADDR_MARK	RW.C	/^#define FDC_FLAG_DATA_ADDR_MARK /;"	d	file:
FDC_FLAG_DELAY	DISK.C	/^#define FDC_FLAG_DELAY /;"	d	file:
FDC_FLAG_DELAY	RW.C	/^#define FDC_FLAG_DELAY /;"	d	file:
FDC_FLAG_H	RW.C	/^#define FDC_FLAG_H /;"	d	file:
FDC_FLAG_INT_CONDITION	DISK.C	/^#define FDC_FLAG_INT_CONDITION /;"	d	file:
FDC_FLAG_MOTOR_ON	DISK.C	/^#define FDC_FLAG_MOTOR_ON /;"	d	file:
FDC_FLAG_MOTOR_ON	RW.C	/^#define FDC_FLAG_MOTOR_ON /;"	d	file:
FDC_FLAG_MULTIPLE_SECT	DISK.C	/^#define FDC_FLAG_MULTIPLE_SECT /;"	d	file:
FDC_FLAG_MULTIPLE_SECT	RW.C	/^#define FDC_FLAG_MULTIPLE_SECT /;"	d	file:
FDC_FLAG_R0	RW.C	/^#define FDC_FLAG_R0 /;"	d	file:
FDC_FLAG_R1	RW.C	/^#define FDC_FLAG_R1 /;"	d	file:
FDC_FLAG_STEP_RATE	DISK.C	/^#define FDC_FLAG_STEP_RATE /;"	d	file:
FDC_FLAG_V	RW.C	/^#define FDC_FLAG_V /;"	d	file:
FDC_FLAG_VERIFY	DISK.C	/^#define FDC_FLAG_VERIFY /;"	d	file:
FDC_FLAG_WRITE_PRECOMP	DISK.C	/^#define FDC_FLAG_WRITE_PRECOMP /;"	d	file:
FDC_FLAG_WRITE_PRECOMP	RW.C	/^#define FDC_FLAG_WRITE_PRECOMP /;"	d	file:
FDC_LOST_DATA	RW.C	/^#define FDC_LOST_DATA /;"	d	file:
FDC_MOTOR_ON	RW.C	/^#define FDC_MOTOR_ON /;"	d	file:
FDC_NOT_FOUND	RW.C	/^#define FDC_NOT_FOUND /;"	d	file:
FDC_READ_DATA	RW.C	/^#define FDC_READ_DATA /;"	d	file:
FDC_READ_SECTOR	RW.C	/^#define FDC_READ_SECTOR /;"	d	file:
FDC_READ_SECTOR_COMMAND	RW.C	/^#define FDC_READ_SECTOR_COMMAND /;"	d	file:
FDC_READ_STATUS	RW.C	/^#define FDC_READ_STATUS /;"	d	file:
FDC_READ_TRACK	RW.C	/^#define FDC_READ_TRACK /;"	d	file:
FDC_RESTORE	RW.C	/^#define FDC_RESTORE /;"	d	file:
FDC_SEEK	RW.C	/^#define FDC_SEEK /;"	d	file:
FDC_TRACK00	RW.C	/^#define FDC_TRACK00 /;"	d	file:
FDC_WRITE_COMMAND	RW.C	/^#define FDC_WRITE_COMMAND /;"	d	file:
FDC_WRITE_DATA	RW.C	/^#define FDC_WRITE_DATA /;"	d	file:
FDC_WRITE_PROTECT	RW.C	/^#define FDC_WRITE_PROTECT /;"	d	file:
FDC_WRITE_SECTOR	RW.C	/^#define FDC_WRITE_SECTOR /;"	d	file:
FDC_WRITE_SECTOR_COMMAND	RW.C	/^#define FDC_WRITE_SECTOR_COMMAND /;"	d	file:
FDC_WRITE_TRACK	RW.C	/^#define FDC_WRITE_TRACK /;"	d	file:
FDC_access	RW.C	/^IO_PORT FDC_access = 0xFF8604;$/;"	v	typeref:typename:IO_PORT
FONT.C	.vscode/settings.json	/^        "FONT.C": "cpp",$/;"	s	object:files.associations
FONT_H	FONT.H	/^#define FONT_H$/;"	d
GLYPH_START	FONT.H	/^#define GLYPH_START(/;"	d
HBL_VECTOR	KERNEL.C	/^#define HBL_VECTOR /;"	d	file:
HDCS_FDCS_SELECT	DISK.C	/^        UINT16 HDCS_FDCS_SELECT : 1;        \/* Bit 3 - Selects HDCS* or FDCS* chip-select (1: H/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
HDCS_FDCS_SELECT	RW.C	/^    UINT16 HDCS_FDCS_SELECT : 1;        \/* Bit 3 - Selects HDCS* or FDCS* chip-select (1: HDCS*/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
IKBD_ACIA_CR	KERNEL.C	/^IO_PORT8 IKBD_ACIA_CR = 0xFFFC00;$/;"	v	typeref:typename:IO_PORT8
IKBD_ACIA_RDR	KERNEL.C	/^IO_PORT8_RO IKBD_ACIA_RDR = 0xFFFC02;$/;"	v	typeref:typename:IO_PORT8_RO
IKBD_ACIA_SR	KERNEL.C	/^IO_PORT8_RO IKBD_ACIA_SR = 0xFFFC00;$/;"	v	typeref:typename:IO_PORT8_RO
IKBD_VECTOR	KERNEL.C	/^#define IKBD_VECTOR /;"	d	file:
IO_PORT16	DISK.C	/^typedef volatile UINT16 *const IO_PORT16;$/;"	t	typeref:typename:volatile UINT16 * const	file:
IO_PORT16	KERNEL.C	/^typedef volatile UINT16 *const IO_PORT16;$/;"	t	typeref:typename:volatile UINT16 * const	file:
IO_PORT16	RW.C	/^typedef volatile UINT16 *const IO_PORT16;$/;"	t	typeref:typename:volatile UINT16 * const	file:
IO_PORT16_RO	DISK.C	/^typedef volatile const UINT16 *const IO_PORT16_RO;$/;"	t	typeref:typename:volatile const UINT16 * const	file:
IO_PORT16_RO	KERNEL.C	/^typedef volatile const UINT16 *const IO_PORT16_RO;$/;"	t	typeref:typename:volatile const UINT16 * const	file:
IO_PORT16_RO	RW.C	/^typedef volatile const UINT16 *const IO_PORT16_RO;$/;"	t	typeref:typename:volatile const UINT16 * const	file:
IO_PORT8	DISK.C	/^typedef volatile UINT8 *const IO_PORT8;$/;"	t	typeref:typename:volatile UINT8 * const	file:
IO_PORT8	KERNEL.C	/^typedef volatile UINT8 *const IO_PORT8;$/;"	t	typeref:typename:volatile UINT8 * const	file:
IO_PORT8	RW.C	/^typedef volatile UINT8 *const IO_PORT8;$/;"	t	typeref:typename:volatile UINT8 * const	file:
IO_PORT8_RO	DISK.C	/^typedef volatile const UINT8 *const IO_PORT8_RO;$/;"	t	typeref:typename:volatile const UINT8 * const	file:
IO_PORT8_RO	KERNEL.C	/^typedef volatile const UINT8 *const IO_PORT8_RO;$/;"	t	typeref:typename:volatile const UINT8 * const	file:
IO_PORT8_RO	RW.C	/^typedef volatile const UINT8 *const IO_PORT8_RO;$/;"	t	typeref:typename:volatile const UINT8 * const	file:
IS_PRINTABLE	FONT.H	/^#define IS_PRINTABLE(/;"	d
KERNEL.C	.vscode/settings.json	/^        "KERNEL.C": "cpp",$/;"	s	object:files.associations
MAX_NUM_PROC	KERNEL.C	/^#define MAX_NUM_PROC /;"	d	file:
MEM_CONFIG_REG	KERN_ASM.S	/^MEM_CONFIG_REG		equ		$FF8001$/;"	d
MFP_GPIP4	KERNEL.C	/^#define MFP_GPIP4 /;"	d	file:
MFP_IERA	KERNEL.C	/^IO_PORT8 MFP_IERA = 0xFFFA07;$/;"	v	typeref:typename:IO_PORT8
MFP_IERB	KERNEL.C	/^IO_PORT8 MFP_IERB = 0xFFFA09;$/;"	v	typeref:typename:IO_PORT8
MFP_IMRA	KERNEL.C	/^IO_PORT8 MFP_IMRA = 0xFFFA13;$/;"	v	typeref:typename:IO_PORT8
MFP_IMRB	KERNEL.C	/^IO_PORT8 MFP_IMRB = 0xFFFA15;$/;"	v	typeref:typename:IO_PORT8
MFP_ISRA	KERNEL.C	/^IO_PORT8 MFP_ISRA = 0xFFFA0F;$/;"	v	typeref:typename:IO_PORT8
MFP_ISRB	KERNEL.C	/^IO_PORT8 MFP_ISRB = 0xFFFA11;$/;"	v	typeref:typename:IO_PORT8
MFP_TACR	KERNEL.C	/^IO_PORT8 MFP_TACR = 0xFFFA19;$/;"	v	typeref:typename:IO_PORT8
MFP_TADR	KERNEL.C	/^IO_PORT8 MFP_TADR = 0xFFFA1F;$/;"	v	typeref:typename:IO_PORT8
MFP_TIMER_A	KERNEL.C	/^#define MFP_TIMER_A /;"	d	file:
MFP_VR	KERNEL.C	/^IO_PORT8 MFP_VR = 0xFFFA17;$/;"	v	typeref:typename:IO_PORT8
MIDI_ACIA_CR	KERNEL.C	/^IO_PORT8 MIDI_ACIA_CR = 0xFFFC04;$/;"	v	typeref:typename:IO_PORT8
MODE	DISK.C	/^    } MODE;                                 \/* Writing to DMA_CONTROL_REGISTER *\/$/;"	m	union:__anonabd59501010a	typeref:struct:__anonabd59501010a::__anonabd595010308	file:
MODE	RW.C	/^    MODE MODE;$/;"	m	union:__anon7c8b7edf030a	typeref:typename:MODE	file:
MODE	RW.C	/^} MODE;                                 \/* Writing to DMA_CONTROL_REGISTER *\/$/;"	t	typeref:struct:__anon7c8b7edf0208	file:
MONO	KERN_ASM.S	/^MONO				equ		$02$/;"	d
OS_RAM_TOP	KERN_ASM.S	/^OS_RAM_TOP			equ		$000800	$/;"	d
PROCESS_ENTRY_SIZE	KERN_ASM.S	/^PROCESS_ENTRY_SIZE	equ		102$/;"	d
PROC_BLOCKED	KERNEL.C	/^#define PROC_BLOCKED /;"	d	file:
PROC_INVALID	KERNEL.C	/^#define PROC_INVALID /;"	d	file:
PROC_READY	KERNEL.C	/^#define PROC_READY /;"	d	file:
PROC_RUNNING	KERNEL.C	/^#define PROC_RUNNING /;"	d	file:
PSG.C	.vscode/settings.json	/^        "PSG.C": "cpp",$/;"	s	object:files.associations
PSG_IOA	RW.C	/^#define PSG_IOA /;"	d	file:
PSG_REG	RW.C	/^struct PSG_REG{ $/;"	s	file:
PSG_REG	RW.C	/^} PSG_REG = { $/;"	v	typeref:struct:PSG_REG
PSG_REG_SELECT	TEST/PSG.C	/^#define PSG_REG_SELECT /;"	d	file:
PSG_REG_WRITE	TEST/PSG.C	/^#define PSG_REG_WRITE /;"	d	file:
PSG_reg_read	RW.C	/^    volatile const char *const PSG_reg_read; $/;"	m	struct:PSG_REG	typeref:typename:volatile const char * const	file:
PSG_reg_sel	RW.C	/^    volatile char *const PSG_reg_sel;$/;"	m	struct:PSG_REG	typeref:typename:volatile char * const	file:
PSG_reg_write	RW.C	/^    volatile char *const PSG_reg_write;$/;"	m	struct:PSG_REG	typeref:typename:volatile char * const	file:
RAM_4M	KERN_ASM.S	/^RAM_4M				equ		$0A$/;"	d
READ_FDC_REGISTER	DISK.C	/^#define READ_FDC_REGISTER(/;"	d	file:
RESERVED_MODE	DISK.C	/^        UINT16 RESERVED_MODE : 8;           \/* Bits 8-15 - Reserved bits for mode register *\/$/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:8	file:
RESERVED_MODE	RW.C	/^    UINT16 RESERVED_MODE : 8;           \/* Bits 8-15 - Reserved bits for mode register *\/$/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:8	file:
RESERVED_MODE_5	DISK.C	/^        UINT16 RESERVED_MODE_5 : 1;         \/* Bit 5 - Reserved, must be set to 0 *\/$/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
RESERVED_MODE_5	RW.C	/^    UINT16 RESERVED_MODE_5 : 1;         \/* Bit 5 - Reserved, must be set to 0 *\/$/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
RESERVED_STATUS	DISK.C	/^        UINT16 RESERVED_STATUS : 13;       \/* Bits 3-15 - Reserved bits for status register *\/$/;"	m	struct:__anonabd59501010a::__anonabd595010208	typeref:typename:UINT16:13	file:
RESERVED_STATUS	RW.C	/^    UINT16 RESERVED_STATUS : 13;       \/* Bits 3-15 - Reserved bits for status register *\/$/;"	m	struct:__anon7c8b7edf0108	typeref:typename:UINT16:13	file:
RW.C	.vscode/settings.json	/^        "RW.C": "cpp",$/;"	s	object:files.associations
SECTOR_COUNT_REG_SELECT	DISK.C	/^        UINT16 SECTOR_COUNT_REG_SELECT : 1; \/* Bit 4 - Selects DMA internal sector count regist/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
SECTOR_COUNT_REG_SELECT	RW.C	/^    UINT16 SECTOR_COUNT_REG_SELECT : 1; \/* Bit 4 - Selects DMA internal sector count register o/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
SECTOR_COUNT_STATUS	DISK.C	/^        UINT16 SECTOR_COUNT_STATUS : 1;    \/* Bit 1 - Sector count status (1: not zero, 0: zero/;"	m	struct:__anonabd59501010a::__anonabd595010208	typeref:typename:UINT16:1	file:
SECTOR_COUNT_STATUS	RW.C	/^    UINT16 SECTOR_COUNT_STATUS : 1;    \/* Bit 1 - Sector count status (1: not zero, 0: zero) *\/$/;"	m	struct:__anon7c8b7edf0108	typeref:typename:UINT16:1	file:
SECTOR_SIZE	RW.C	/^#define SECTOR_SIZE /;"	d	file:
SEEK.C	.vscode/settings.json	/^        "SEEK.C": "cpp",$/;"	s	object:files.associations
SET_DMA_ADDRESS	DISK.C	/^#define SET_DMA_ADDRESS(/;"	d	file:
SET_DMA_ADDRESS	RW.C	/^#define SET_DMA_ADDRESS(/;"	d	file:
SET_DMA_ADDRESS_COUNTER	DISK.C	/^#define SET_DMA_ADDRESS_COUNTER(/;"	d	file:
SET_DMA_ADDRESS_COUNTER	RW.C	/^#define SET_DMA_ADDRESS_COUNTER(/;"	d	file:
SET_DMA_ADDR_HIGH	DISK.C	/^#define SET_DMA_ADDR_HIGH(/;"	d	file:
SET_DMA_ADDR_HIGH	RW.C	/^#define SET_DMA_ADDR_HIGH(/;"	d	file:
SET_DMA_ADDR_LOW	DISK.C	/^#define SET_DMA_ADDR_LOW(/;"	d	file:
SET_DMA_ADDR_LOW	RW.C	/^#define SET_DMA_ADDR_LOW(/;"	d	file:
SET_DMA_ADDR_MID	DISK.C	/^#define SET_DMA_ADDR_MID(/;"	d	file:
SET_DMA_ADDR_MID	RW.C	/^#define SET_DMA_ADDR_MID(/;"	d	file:
SET_DMA_MODE_READ	DISK.C	/^#define SET_DMA_MODE_READ(/;"	d	file:
SET_DMA_MODE_TO_TRANSFER_SECTOR_COUNT	DISK.C	/^#define SET_DMA_MODE_TO_TRANSFER_SECTOR_COUNT(/;"	d	file:
SET_DMA_MODE_WRITE	DISK.C	/^#define SET_DMA_MODE_WRITE(/;"	d	file:
SET_DMA_READ_MODE	DISK.C	/^#define SET_DMA_READ_MODE(/;"	d	file:
SET_DMA_SECTOR_COUNT	DISK.C	/^#define SET_DMA_SECTOR_COUNT(/;"	d	file:
SET_DMA_WRITE_MODE	DISK.C	/^#define SET_DMA_WRITE_MODE(/;"	d	file:
SHELL_BUF_LEN	KERNEL.C	/^#define SHELL_BUF_LEN /;"	d	file:
SIDE_0	RW.C	/^#define SIDE_0 /;"	d	file:
SIDE_1	RW.C	/^#define SIDE_1 /;"	d	file:
START_DMA_READ_TRANSFER	DISK.C	/^#define START_DMA_READ_TRANSFER(/;"	d	file:
START_DMA_WRITE_TRANSFER	DISK.C	/^#define START_DMA_WRITE_TRANSFER(/;"	d	file:
STATUS	DISK.C	/^    } STATUS;                              \/* Reading from DMA_STATUS_REGISTER *\/$/;"	m	union:__anonabd59501010a	typeref:struct:__anonabd59501010a::__anonabd595010208	file:
STATUS	RW.C	/^    STATUS STATUS;$/;"	m	union:__anon7c8b7edf030a	typeref:typename:STATUS	file:
STATUS	RW.C	/^} STATUS;                              \/* Reading from DMA_STATUS_REGISTER *\/$/;"	t	typeref:struct:__anon7c8b7edf0108	file:
SUCCESS	RW.C	/^#define SUCCESS /;"	d	file:
TEXT_OFFSET	KERNEL.C	/^#define TEXT_OFFSET /;"	d	file:
TIMER_A_VECTOR	KERNEL.C	/^#define TIMER_A_VECTOR /;"	d	file:
TRANSFER_DIRECTION	DISK.C	/^        UINT16 TRANSFER_DIRECTION : 1;      \/* Bit 7 - Sets data transfer direction  *\/$/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
TRANSFER_DIRECTION	RW.C	/^    UINT16 TRANSFER_DIRECTION : 1;      \/* Bit 7 - Sets data transfer direction  *\/$/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
TRAP_1_VECTOR	KERNEL.C	/^#define TRAP_1_VECTOR /;"	d	file:
TRAP_2_VECTOR	KERNEL.C	/^#define TRAP_2_VECTOR /;"	d	file:
TRAP_3_VECTOR	KERNEL.C	/^#define TRAP_3_VECTOR /;"	d	file:
TRAP_4_VECTOR	KERNEL.C	/^#define TRAP_4_VECTOR /;"	d	file:
TRAP_5_VECTOR	KERNEL.C	/^#define TRAP_5_VECTOR /;"	d	file:
TRAP_7_VECTOR	KERNEL.C	/^#define TRAP_7_VECTOR /;"	d	file:
TYPES_H	TYPES.H	/^#define TYPES_H$/;"	d
UINT16	DISK.C	/^typedef unsigned int UINT16;$/;"	t	typeref:typename:unsigned int	file:
UINT16	RW.C	/^typedef unsigned int UINT16;$/;"	t	typeref:typename:unsigned int	file:
UINT16	TEST/PSG.C	/^typedef unsigned int UINT16;$/;"	t	typeref:typename:unsigned int	file:
UINT16	TYPES.H	/^typedef unsigned int  UINT16;$/;"	t	typeref:typename:unsigned int
UINT32	DISK.C	/^typedef unsigned long UINT32;$/;"	t	typeref:typename:unsigned long	file:
UINT32	RW.C	/^typedef unsigned long UINT32;$/;"	t	typeref:typename:unsigned long	file:
UINT32	TEST/PSG.C	/^typedef unsigned long UINT32;$/;"	t	typeref:typename:unsigned long	file:
UINT32	TYPES.H	/^typedef unsigned long UINT32;$/;"	t	typeref:typename:unsigned long
UINT8	DISK.C	/^typedef unsigned char UINT8;$/;"	t	typeref:typename:unsigned char	file:
UINT8	RW.C	/^typedef unsigned char UINT8;$/;"	t	typeref:typename:unsigned char	file:
UINT8	TEST/PSG.C	/^typedef unsigned char UINT8;$/;"	t	typeref:typename:unsigned char	file:
UINT8	TYPES.H	/^typedef unsigned char UINT8;$/;"	t	typeref:typename:unsigned char
UNUSED	DISK.C	/^        UINT16 UNUSED : 1;                  \/* Bit 0 - Unused, must be set to 0 *\/$/;"	m	struct:__anonabd59501010a::__anonabd595010308	typeref:typename:UINT16:1	file:
UNUSED	RW.C	/^    UINT16 UNUSED : 1;                  \/* Bit 0 - Unused, must be set to 0 *\/$/;"	m	struct:__anon7c8b7edf0208	typeref:typename:UINT16:1	file:
VBL_VECTOR	KERNEL.C	/^#define VBL_VECTOR /;"	d	file:
VIDEO_BASE	KERN_ASM.S	/^VIDEO_BASE			equ		$3F8000$/;"	d
VIDEO_BASE_REG	KERN_ASM.S	/^VIDEO_BASE_REG		equ		$FF8201$/;"	d
VIDEO_PAL0_REG	KERN_ASM.S	/^VIDEO_PAL0_REG		equ		$FF8240$/;"	d
VIDEO_REZ_REG	KERN_ASM.S	/^VIDEO_REZ_REG   	equ		$FF8260$/;"	d
VIDEO_SYNC_REG	KERN_ASM.S	/^VIDEO_SYNC_REG		equ		$FF820A$/;"	d
VID_BASE_HI	KERNEL.C	/^IO_PORT8 VID_BASE_HI = 0xFF8201;$/;"	v	typeref:typename:IO_PORT8
VID_BASE_MID	KERNEL.C	/^IO_PORT8 VID_BASE_MID = 0xFF8203;$/;"	v	typeref:typename:IO_PORT8
Vector	DISK.C	/^typedef void (*Vector)();$/;"	t	typeref:typename:void (*)()	file:
Vector	KERNEL.C	/^typedef void (*Vector)();$/;"	t	typeref:typename:void (*)()	file:
Vector	RW.C	/^typedef void (*Vector)();$/;"	t	typeref:typename:void (*)()	file:
WDC_DMA	DISK.C	/^} WDC_DMA;$/;"	t	typeref:union:__anonabd59501010a	file:
WDC_DMA	RW.C	/^} WDC_DMA;$/;"	t	typeref:union:__anon7c8b7edf030a	file:
WDC_DMA_ADDRESS	DISK.C	/^#define WDC_DMA_ADDRESS /;"	d	file:
WDC_DMA_ADDRESS	RW.C	/^#define WDC_DMA_ADDRESS /;"	d	file:
WDC_DMA_BASE_HIGH	DISK.C	/^IO_PORT8 WDC_DMA_BASE_HIGH = (IO_PORT8)0xFFFF8609; \/* DMA base address high byte *\/$/;"	v	typeref:typename:IO_PORT8
WDC_DMA_BASE_LOW	DISK.C	/^IO_PORT8 WDC_DMA_BASE_LOW = (IO_PORT8)0xFFFF860D;  \/* DMA base address low byte *\/$/;"	v	typeref:typename:IO_PORT8
WDC_DMA_BASE_MID	DISK.C	/^IO_PORT8 WDC_DMA_BASE_MID = (IO_PORT8)0xFFFF860B;  \/* DMA base address middle byte *\/$/;"	v	typeref:typename:IO_PORT8
WDC_SECTOR_COUNT	DISK.C	/^IO_PORT16 WDC_SECTOR_COUNT = (IO_PORT16)0xFFFF8604;$/;"	v	typeref:typename:IO_PORT16
WDC_SECTOR_COUNT	RW.C	/^IO_PORT16 WDC_SECTOR_COUNT = (IO_PORT16)0xFFFF8604;$/;"	v	typeref:typename:IO_PORT16
WRITE_FDC_REGISTER	DISK.C	/^#define WRITE_FDC_REGISTER(/;"	d	file:
__anon7c8b7edf0108	RW.C	/^{$/;"	s	file:
__anon7c8b7edf0208	RW.C	/^{$/;"	s	file:
__anon7c8b7edf030a	RW.C	/^typedef union {$/;"	u	file:
__anon7c8b7edf0408	RW.C	/^typedef struct {$/;"	s	file:
__anonabd59501010a	DISK.C	/^typedef union {$/;"	u	file:
__anonabd595010208	DISK.C	/^    {$/;"	s	union:__anonabd59501010a	file:
__anonabd595010308	DISK.C	/^    {$/;"	s	union:__anonabd59501010a	file:
_addr_exception_isr	KERN_ASM.S	/^_addr_exception_isr:$/;"	l
_await_interrupt	KERN_ASM.S	/^_await_interrupt:	stop	#$2200$/;"	l
_clear_screen	KERN_ASM.S	/^_clear_screen:		movem.l	d0-7\/a0-6,-(sp)$/;"	l
_create_process	KERN_ASM.S	/^_create_process:	link	a6,#0$/;"	l
_exception_isr	KERN_ASM.S	/^_exception_isr:		jsr		_do_exception_isr		; doesn't return$/;"	l
_exit	KERN_ASM.S	/^_exit:				trap	#1						; no parameter$/;"	l
_get_pid	KERN_ASM.S	/^_get_pid:			trap	#5						; returns with output in d0.w$/;"	l
_ikbd_isr	KERN_ASM.S	/^_ikbd_isr:			movem.l	d0-2\/a0-2,-(sp)$/;"	l
_load_cpu_context	KERN_ASM.S	/^_load_cpu_context:	movea.l	4(sp),a0				; passed Context struct start addr$/;"	l
_read	KERN_ASM.S	/^_read:				link	a6,#0$/;"	l
_read_SR	KERN_ASM.S	/^_read_SR:			move.w	sr,d0$/;"	l
_read_SR	TEST/SR.S	/^_read_SR:			move.w	sr,d0$/;"	l
_restart	KERN_ASM.S	/^_restart:			jmp		start$/;"	l
_scroll	KERN_ASM.S	/^_scroll:			movem.l	d3-7\/a3-5,-(sp)$/;"	l
_store_cpu_context	KERN_ASM.S	/^_store_cpu_context:	adda.l	#CPU_CONTEXT_SIZE,a0$/;"	l
_sys_create_process	KERN_ASM.S	/^_sys_create_process:$/;"	l
_sys_exit	KERN_ASM.S	/^_sys_exit:			jsr		_do_exit				; doesn't return$/;"	l
_sys_get_pid	KERN_ASM.S	/^_sys_get_pid:		jsr		_do_get_pid				; returns with output in d0.w$/;"	l
_sys_read	KERN_ASM.S	/^_sys_read:			;movem.l	d0-2\/a0-2,-(sp)		; [TO DO] simplify reg save\/restore for exceptions & tr/;"	l
_sys_write	KERN_ASM.S	/^_sys_write:			move.l	usp,a0$/;"	l
_sys_yield	KERN_ASM.S	/^_sys_yield:			jsr		_do_yield				; doesn't return$/;"	l
_timer_A_isr	KERN_ASM.S	/^_timer_A_isr:		movem.l	d0-2\/a0-2,-(sp)$/;"	l
_vbl_isr	KERN_ASM.S	/^_vbl_isr:			movem.l	d0-2\/a0-2,-(sp)$/;"	l
_write	KERN_ASM.S	/^_write:				link	a6,#0$/;"	l
_write_SR	KERN_ASM.S	/^_write_SR:			move.w	4(sp),sr$/;"	l
_write_SR	TEST/SR.S	/^_write_SR:			move.w	4(sp),sr$/;"	l
_yield	KERN_ASM.S	/^_yield:				trap	#7$/;"	l
a0	KERNEL.C	/^    UINT32 a0;$/;"	m	struct:CPU_context	typeref:typename:UINT32	file:
after_pc_adjust	KERN_ASM.S	/^after_pc_adjust:	movea.l	_curr_proc,a0			; switch to next process$/;"	l
args	.vscode/tasks.json	/^            "args": [$/;"	a	object:tasks.0
base	KERN_ASM.S	/^base	equ		64									; offset from SP, not A6$/;"	d
chrono	.vscode/settings.json	/^        "chrono": "cpp",$/;"	s	object:files.associations
clear_cursor	KERNEL.C	/^void clear_cursor()$/;"	f	typeref:typename:void
clear_rest	KERN_ASM.S	/^clear_rest:			movem.l	d2-7\/a2-5,-(a1)$/;"	l
command	.vscode/tasks.json	/^            "command": "\/usr\/bin\/gcc",$/;"	s	object:tasks.0
console_x_p	KERNEL.C	/^UINT8 *const console_x_p = 0x000140; \/* [TO DO] group with console driver data *\/$/;"	v	typeref:typename:UINT8 * const
console_y_p	KERNEL.C	/^UINT8 *const console_y_p = 0x000141;$/;"	v	typeref:typename:UINT8 * const
cpu_context	KERNEL.C	/^    struct CPU_context cpu_context; \/* must be first element in structure *\/$/;"	m	struct:process	typeref:struct:CPU_context	file:
cstdint	.vscode/settings.json	/^        "cstdint": "cpp",$/;"	s	object:files.associations
curr_proc	KERNEL.C	/^UINT16 *const curr_proc = 0x000200;$/;"	v	typeref:typename:UINT16 * const
cursor_visible	KERNEL.C	/^UINT16 *const cursor_visible = 0x000144;$/;"	v	typeref:typename:UINT16 * const
cwd	.vscode/tasks.json	/^                "cwd": "${fileDirname}"$/;"	s	object:tasks.0.options
d0_to_7_a1_to_6	KERNEL.C	/^    UINT32 d0_to_7_a1_to_6[14];$/;"	m	struct:CPU_context	typeref:typename:UINT32[14]	file:
dbra	KERN_ASM.S	/^					dbra	d0,clear_rest$/;"	d
dbra	KERN_ASM.S	/^					dbra	d0,fill_loop$/;"	d
dbra	KERN_ASM.S	/^					dbra	d0,scroll_most$/;"	d
deque	.vscode/settings.json	/^        "deque": "cpp",$/;"	s	object:files.associations
detail	.vscode/tasks.json	/^            "detail": "Task generated by Debugger."$/;"	s	object:tasks.0
dma_mode	RW.C	/^volatile MODE *dma_mode = (volatile MODE *)WDC_DMA_ADDRESS;$/;"	v	typeref:typename:volatile MODE *
dma_status	RW.C	/^volatile STATUS *dma_status = (volatile STATUS *)WDC_DMA_ADDRESS;$/;"	v	typeref:typename:volatile STATUS *
do_addr_exception_isr	KERNEL.C	/^void do_addr_exception_isr(UINT16 flags, UINT32 addr, UINT16 ir, UINT16 sr)$/;"	f	typeref:typename:void
do_create_process	KERNEL.C	/^void do_create_process(UINT16 prog_num, UINT16 is_fg)$/;"	f	typeref:typename:void
do_exception_isr	KERNEL.C	/^void do_exception_isr(UINT16 sr)$/;"	f	typeref:typename:void
do_exit	KERNEL.C	/^void do_exit()$/;"	f	typeref:typename:void
do_get_pid	KERNEL.C	/^int do_get_pid()$/;"	f	typeref:typename:int
do_ikbd_isr	KERNEL.C	/^void do_ikbd_isr()$/;"	f	typeref:typename:void
do_read	KERNEL.C	/^int do_read(char *buf, unsigned int len)$/;"	f	typeref:typename:int
do_timer_A_isr	KERNEL.C	/^void do_timer_A_isr(UINT16 sr)$/;"	f	typeref:typename:void
do_vbl_isr	KERNEL.C	/^void do_vbl_isr()$/;"	f	typeref:typename:void
do_write	KERNEL.C	/^void do_write(const char *buf, unsigned int len)$/;"	f	typeref:typename:void
do_yield	KERNEL.C	/^void do_yield()$/;"	f	typeref:typename:void
dummy1	KERNEL.C	/^    UINT32 dummy1;$/;"	m	struct:process	typeref:typename:UINT32	file:
dummy2	KERNEL.C	/^    UINT32 dummy2;$/;"	m	struct:process	typeref:typename:UINT32	file:
dummy3	KERNEL.C	/^    UINT32 dummy3;$/;"	m	struct:process	typeref:typename:UINT32	file:
dummy4	KERNEL.C	/^    UINT32 dummy4;$/;"	m	struct:process	typeref:typename:UINT32	file:
dummy5	KERNEL.C	/^    UINT32 dummy5;$/;"	m	struct:process	typeref:typename:UINT32	file:
dummy6	KERNEL.C	/^    UINT32 dummy6;$/;"	m	struct:process	typeref:typename:UINT32	file:
files.associations	.vscode/settings.json	/^    "files.associations": {$/;"	o
fill_loop	KERN_ASM.S	/^fill_loop:			movem.l	d1-7\/a1-6,-(a0)$/;"	l
flop_read	RW.C	/^int flop_read(int disk, int side, int track, int sector, char *buff)$/;"	f	typeref:typename:int
flop_write	RW.C	/^int flop_write(int disk, int side, int track, int sector, const char *buff)$/;"	f	typeref:typename:int
font	FONT.C	/^const UINT8 font[] = {$/;"	v	typeref:typename:const UINT8[]
functional	.vscode/settings.json	/^        "functional": "cpp"$/;"	s	object:files.associations
get_video_base	KERNEL.C	/^#define get_video_base(/;"	d	file:
group	.vscode/tasks.json	/^            "group": {$/;"	o	object:tasks.0
hello	KERNEL.C	/^void hello()$/;"	f	typeref:typename:void
init	KERNEL.C	/^void init()$/;"	f	typeref:typename:void
init_IO	KERNEL.C	/^void init_IO()$/;"	f	typeref:typename:void
init_proc_table	KERNEL.C	/^void init_proc_table()$/;"	f	typeref:typename:void
init_vector_table	KERNEL.C	/^void init_vector_table()$/;"	f	typeref:typename:void
input_enqueue	KERNEL.C	/^void input_enqueue(char ch)$/;"	f	typeref:typename:void
invert_cursor	KERNEL.C	/^void invert_cursor()$/;"	f	typeref:typename:void
isDefault	.vscode/tasks.json	/^                "isDefault": true$/;"	b	object:tasks.0.group
kind	.vscode/tasks.json	/^                "kind": "build",$/;"	s	object:tasks.0.group
kybd_auto_ch	KERNEL.C	/^UINT8 *const kybd_auto_ch = 0x00040E;$/;"	v	typeref:typename:UINT8 * const
kybd_auto_count	KERNEL.C	/^UINT16 *const kybd_auto_count = 0x000410;$/;"	v	typeref:typename:UINT16 * const
kybd_blocked_proc	KERNEL.C	/^UINT16 *const kybd_blocked_proc = 0x000412;$/;"	v	typeref:typename:UINT16 * const
kybd_buff	KERNEL.C	/^UINT8 *const kybd_buff = 0x000416; \/* 128 byte circular queue - must be a power of 2 *\/$/;"	v	typeref:typename:UINT8 * const
kybd_buff_fill	KERNEL.C	/^UINT16 *const kybd_buff_fill = 0x000406;$/;"	v	typeref:typename:UINT16 * const
kybd_buff_head	KERNEL.C	/^UINT16 *const kybd_buff_head = 0x000402;$/;"	v	typeref:typename:UINT16 * const
kybd_buff_tail	KERNEL.C	/^UINT16 *const kybd_buff_tail = 0x000404;$/;"	v	typeref:typename:UINT16 * const
kybd_fg_proc	KERNEL.C	/^UINT16 *const kybd_fg_proc = 0x000414;$/;"	v	typeref:typename:UINT16 * const
kybd_isr_state	KERNEL.C	/^UINT16 *const kybd_isr_state = 0x000400; \/* 0=not in mouse packet, 1=expecting delta x, 2=expec/;"	v	typeref:typename:UINT16 * const
kybd_len_line	KERNEL.C	/^UINT16 *const kybd_len_line = 0x00040A; \/* number of characters in buffer for current line *\/$/;"	v	typeref:typename:UINT16 * const
kybd_num_lines	KERNEL.C	/^UINT16 *const kybd_num_lines = 0x000408;$/;"	v	typeref:typename:UINT16 * const
kybd_shifted	KERNEL.C	/^UINT16 *const kybd_shifted = 0x00040C;$/;"	v	typeref:typename:UINT16 * const
label	.vscode/tasks.json	/^            "label": "C\/C++: gcc build active file",$/;"	s	object:tasks.0
list	.vscode/settings.json	/^        "list": "cpp",$/;"	s	object:files.associations
load	KERNEL.C	/^void load(UINT16 i, void (*p)())$/;"	f	typeref:typename:void
main	RW.C	/^int main(void)$/;"	f	typeref:typename:int
options	.vscode/tasks.json	/^            "options": {$/;"	o	object:tasks.0
out1	KERN_ASM.S	/^out1:				movea.l	(sp)+,a0$/;"	l
out2	KERN_ASM.S	/^out2:				rts$/;"	l
panic	KERNEL.C	/^void panic()$/;"	f	typeref:typename:void
parent	KERNEL.C	/^    struct process *parent;$/;"	m	struct:process	typeref:struct:process *	file:
pc	KERNEL.C	/^    UINT32 pc;$/;"	m	struct:CPU_context	typeref:typename:UINT32	file:
pid	KERNEL.C	/^    UINT16 pid;$/;"	m	struct:process	typeref:typename:UINT16	file:
plot_glyph	KERNEL.C	/^void plot_glyph(UINT8 ch)$/;"	f	typeref:typename:void
pre_return	KERN_ASM.S	/^pre_return:			cmpi.w	#$2000,4(sp)			; check if S bit was set (xxSx xxxx xxxx xxxx)$/;"	l
prep_flop_rw	RW.C	/^int prep_flop_rw(int disk, int side, int track)$/;"	f	typeref:typename:int
print_char	KERNEL.C	/^void print_char(char ch)$/;"	f	typeref:typename:void
print_char_safe	KERNEL.C	/^void print_char_safe(char ch)$/;"	f	typeref:typename:void
print_str	KERNEL.C	/^void print_str(char *str)$/;"	f	typeref:typename:void
print_str_safe	KERNEL.C	/^void print_str_safe(char *str)$/;"	f	typeref:typename:void
problemMatcher	.vscode/tasks.json	/^            "problemMatcher": [$/;"	a	object:tasks.0
proc	KERNEL.C	/^struct process *const proc = 0x000204;   \/* array of MAX_NUM_PROC (4) process structures *\/$/;"	v	typeref:struct:process * const
process	KERNEL.C	/^struct process \/* 102 bytes *\/$/;"	s	file:
prog	KERNEL.C	/^const Vector prog[] = {shell, hello, user_program_2, user_program_3, user_program_4};$/;"	v	typeref:typename:const Vector[]
read_command	RW.C	/^const unsigned char read_command = FDC_CMD_READ | FDC_FLAG_MOTOR_ON;$/;"	v	typeref:typename:const unsigned char
read_sector	RW.C	/^int read_sector(int sector, char *buff) \/* reads sector at current track *\/$/;"	f	typeref:typename:int
resched_needed	KERNEL.C	/^UINT16 *const resched_needed = 0x000202; \/* 0=no, 1=yes, 2=yes with eventual trap restart (bloc/;"	v	typeref:typename:UINT16 * const
reset_cursor	KERNEL.C	/^void reset_cursor()$/;"	f	typeref:typename:void
restore	RW.C	/^int restore() \/* seeks to track 00 *\/$/;"	f	typeref:typename:int
restore_command	RW.C	/^const unsigned char restore_command = FDC_FLAG_H | FDC_CMD_RESTORE | FDC_FLAG_R1;$/;"	v	typeref:typename:const unsigned char
safe_psg	TEST/PSG.C	/^UINT8 safe_psg(UINT8 value, UINT8 register_number)$/;"	f	typeref:typename:UINT8
scan2ascii	KERNEL.C	/^const UINT8 scan2ascii[2][128] = {$/;"	v	typeref:typename:const UINT8[2][128]
schedule	KERNEL.C	/^void schedule()$/;"	f	typeref:typename:void
scroll_most	KERN_ASM.S	/^scroll_most:		movem.l	(a0)+,d2-d7\/a2-5$/;"	l
seek	RW.C	/^int seek(int track)$/;"	f	typeref:typename:int
seek_command	RW.C	/^const unsigned char seek_command = FDC_FLAG_H | FDC_CMD_SEEK | FDC_FLAG_R1;$/;"	v	typeref:typename:const unsigned char
select_disk	RW.C	/^int select_disk(int disk, int side)$/;"	f	typeref:typename:int
select_drive	TEST/PSG.C	/^void select_drive(UINT8 drive, UINT8 side)$/;"	f	typeref:typename:void
set_DMA_start_address	RW.C	/^void set_DMA_start_address(char *addr)$/;"	f	typeref:typename:void
set_ipl	KERNEL.C	/^UINT16 set_ipl(UINT16 ipl)$/;"	f	typeref:typename:UINT16
set_ipl	TEST/PSG.C	/^UINT16 set_ipl(UINT16 ipl)$/;"	f	typeref:typename:UINT16
shell	KERNEL.C	/^void shell()$/;"	f	typeref:typename:void
sr	KERNEL.C	/^    UINT16 sr;$/;"	m	struct:CPU_context	typeref:typename:UINT16	file:
start	KERN_ASM.S	/^start:				move.w	#$2700,sr$/;"	l
state	KERNEL.C	/^    UINT16 state;$/;"	m	struct:process	typeref:typename:UINT16	file:
string	.vscode/settings.json	/^        "string": "cpp",$/;"	s	object:files.associations
system_error	.vscode/settings.json	/^        "system_error": "cpp",$/;"	s	object:files.associations
tasks	.vscode/tasks.json	/^    "tasks": [$/;"	a
terminate	KERNEL.C	/^void terminate()$/;"	f	typeref:typename:void
type	.vscode/tasks.json	/^            "type": "cppbuild",$/;"	s	object:tasks.0
unordered_map	.vscode/settings.json	/^        "unordered_map": "cpp",$/;"	s	object:files.associations
user_program_2	KERNEL.C	/^void user_program_2()$/;"	f	typeref:typename:void
user_program_3	KERNEL.C	/^void user_program_3()$/;"	f	typeref:typename:void
user_program_4	KERNEL.C	/^void user_program_4()$/;"	f	typeref:typename:void
usp	KERNEL.C	/^    UINT32 usp;$/;"	m	struct:CPU_context	typeref:typename:UINT32	file:
vbl_counter	KERNEL.C	/^UINT16 *const vbl_counter = 0x000142;$/;"	v	typeref:typename:UINT16 * const
vec_high	RW.C	/^    volatile char *const vec_high;$/;"	m	struct:__anon7c8b7edf0408	typeref:typename:volatile char * const	file:
vec_low	RW.C	/^    volatile char *const vec_low;$/;"	m	struct:__anon7c8b7edf0408	typeref:typename:volatile char * const	file:
vec_mid	RW.C	/^    volatile char *const vec_mid;$/;"	m	struct:__anon7c8b7edf0408	typeref:typename:volatile char * const	file:
vector	.vscode/settings.json	/^        "vector": "cpp",$/;"	s	object:files.associations
vector_table	KERNEL.C	/^Vector *const vector_table = 0x000000;$/;"	v	typeref:typename:Vector * const
version	.vscode/tasks.json	/^    "version": "2.0.0"$/;"	s
wait_for_not_busy	RW.C	/^void wait_for_not_busy() \/* waits for previous FDC command to finish *\/$/;"	f	typeref:typename:void
write_command	RW.C	/^const unsigned char write_command = FDC_CMD_WRITE | FDC_FLAG_MOTOR_ON | FDC_FLAG_WRITE_PRECOMP;$/;"	v	typeref:typename:const unsigned char
write_deleted_data_command	RW.C	/^const unsigned char write_deleted_data_command = FDC_CMD_WRITE | FDC_FLAG_MOTOR_ON | FDC_FLAG_WR/;"	v	typeref:typename:const unsigned char
write_sector	RW.C	/^int write_sector(int sector, const char *buff) \/* writes sector at *\/$/;"	f	typeref:typename:int
zeros	KERN_ASM.S	/^zeros:				ds.l	13$/;"	d
